/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cifrado.cifradofinal;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileReader;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author shyne
 */
public class Servidor extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form Servidor
     */
    public Servidor() {
        initComponents();
        Thread hilo = new Thread(this);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtDesencriptado = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLlave = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtEncriptado = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtDesencriptado.setColumns(20);
        txtDesencriptado.setRows(5);
        jScrollPane1.setViewportView(txtDesencriptado);

        txtLlave.setColumns(20);
        txtLlave.setRows(5);
        jScrollPane2.setViewportView(txtLlave);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        jLabel1.setText("Llave:");

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        jLabel2.setText("Texto Desencriptado");

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel3.setText("RECEPTOR");

        txtEncriptado.setColumns(20);
        txtEncriptado.setRows(5);
        jScrollPane3.setViewportView(txtEncriptado);

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        jLabel4.setText("Texto Encriptado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 280, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea txtDesencriptado;
    private javax.swing.JTextArea txtEncriptado;
    private javax.swing.JTextArea txtLlave;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try{
            ServerSocket servidor = new ServerSocket(9999);
            while(true){
                Socket socket = servidor.accept();
                DataInputStream datos = new DataInputStream(socket.getInputStream());
                
                String textoEncriptado = datos.readUTF();
                String key = datos.readUTF();
                
                txtEncriptado.setText(textoEncriptado);
                txtLlave.setText(key);
                
                //Realizar aqu√≠ operaciones pertinentes
                desencriptar(textoEncriptado, key);
            }
            
        }catch(Exception e){
            System.out.println(e);
        }
    }
    
    public void desencriptar(String encriptado, String llave){
        try {
            String lecturaLlave = llave;
            String lecturaEncriptado = encriptado;
            
            String binario = "";
            //se comienza con la primera letra, una vez que sean 8 digitos pasaremos a la segunda
            int letra = 0;
            //recorrer caracter a caracter
            int indexLlave = 0;
            //-48 es por que en ASCII el 1 es valor ascii 49 el 2 es 50
            //cuando leo el valor de la cadena para volver a la posicion original lo leo ne asi
            //le resto 48, y me queda el numero verdadero que tiene.
            //y con eso se que la posicion se tiene que intercambiar
            int intercambio1 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
            indexLlave++;
            int intercambio2 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
            indexLlave++;
            int intercambio3 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
            indexLlave++;
            int intercambio4 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
            indexLlave++;
            System.out.println(intercambio1 + " " + intercambio2 + " " + intercambio3 + " " + intercambio4);
            char caracter;
            int codigoAscii;
            int auxiliar = 0;

            String mensajeDesencriptado = "";

            for (int i = 0; i < lecturaEncriptado.length(); i++) {
                caracter = lecturaEncriptado.charAt(i);
                /*
                cuando la variable letra este en 0 letra = 0
                cuando este en 1 letra ira a la posicion 8
                cuando este en 2 valdra 16
                lo que tengo en la llave son valores relativos
                
                 */
                if (i - (letra * 8) == intercambio1) {
                    caracter = lecturaEncriptado.charAt((letra * 8) + intercambio2);
                }
                if (i - (letra * 8) == intercambio2) {
                    caracter = lecturaEncriptado.charAt((letra * 8) + intercambio1);
                }
                if (i - (letra * 8) == intercambio3) {
                    caracter = lecturaEncriptado.charAt((letra * 8) + intercambio4);
                }
                if (i - (letra * 8) == intercambio4) {
                    caracter = lecturaEncriptado.charAt((letra * 8) + intercambio3);
                }

                binario = binario.concat(Character.toString(caracter));
                System.out.println(binario);
                auxiliar++;

                //hemos avanzado una letra
                if (auxiliar % 8 == 0) {
                    codigoAscii = 0;
                    //se transforma el codigo a caracter
                    for (int j = 0; j < 8; j++) if (binario.charAt(j) == '1') codigoAscii += Math.pow(2, (7 - j));
                            caracter = (char) codigoAscii;
                            System.out.println(caracter);
                            binario = "";
                            letra++;

                    mensajeDesencriptado = mensajeDesencriptado.concat(Character.toString(caracter));

                    if (indexLlave < lecturaLlave.length()) {
                        intercambio1 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
                        indexLlave++;
                        intercambio2 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
                        indexLlave++;
                        intercambio3 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
                        indexLlave++;
                        intercambio4 = Character.valueOf(lecturaLlave.charAt(indexLlave)) - 48;
                        indexLlave++;
                    }
                }
            }
            txtDesencriptado.setText(mensajeDesencriptado);

        } catch (Exception e) {

        }
    }
}
